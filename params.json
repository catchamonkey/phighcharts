{"name":"Phighcharts","body":"#Phighcharts ![Project Build Status](https://secure.travis-ci.org/catchamonkey/phighcharts.png)\r\nA PHP (Requires PHP 5.3) library for the Highcharts JavaScript charting library\r\n\r\n##What does it do?\r\nAlong with providing a nice OO interface to create your charts, it also\r\nextends the functionality by adding such useful tools as \"Sticky Keys\"\r\n\r\n###Sticky Keys\r\nA sticky key, is a configuration option that allows you to always use the same colour\r\nfor certain keys.\r\nFor example, you may want to always use green for apples when charting apples vs oranges.\r\n\r\n##Example Pie Chart\r\n\r\n```php\r\n<?php\r\n\r\n    use Phighchart\\Chart;\r\n    use Phighchart\\Options\\Container;\r\n    use Phighchart\\Options\\ExtendedContainer;\r\n    use Phighchart\\Data;\r\n    use Phighchart\\Renderer\\Pie;\r\n    use Phighchart\\Renderer\\Line;\r\n\r\n    $extOptions = new ExtendedContainer();\r\n    $extOptions->setStickyColour('apples', '#629632');\r\n    $extOptions->setStickyColour('oranges', '#CD3700');\r\n\r\n    $options = new Container('chart');\r\n    $options->setRenderTo('chart_example_59');\r\n    $options->setMarginRight(130);\r\n    $options->setMarginBottom(25);\r\n\r\n    $titleOptions = new Container('title');\r\n    $titleOptions->setText('Monthly Details');\r\n    $titleOptions->setX(-20);\r\n\r\n    $data = new Data();\r\n    $data\r\n        ->addCount('Apples', 32)\r\n        ->addCount('Oranges', 68)\r\n        ->addSeries('Apples', array(\r\n            '2012-05-01' => 12,\r\n            '2012-05-02' => 3,\r\n            '2012-05-03' => 33\r\n        ))\r\n        ->addSeries('Oranges', array(\r\n            '2012-05-01' => 32,\r\n            '2012-05-02' => 36,\r\n            '2012-05-03' => 18\r\n        ));\r\n\r\n    // put it all together\r\n    $chart  = new Chart();\r\n    $chart\r\n        ->addOptions($options)\r\n        ->addOptions($titleOptions)\r\n        ->addOptions($extOptions)\r\n        ->setData($data)\r\n        ->setRenderer(new Pie());\r\n\r\n    // a line chart is similiar, and our data container holds series data for this\r\n    $lineChart = clone $chart;\r\n    $options = new Container('chart');\r\n    $options->setRenderTo('chart_example_60');\r\n    $options->setMarginRight(130);\r\n    $options->setMarginBottom(25);\r\n    $lineChart->addOptions($options)->setRenderer(new Line());\r\n\r\n    // and render in the template\r\n    $chart->renderContainer();\r\n    // or to change the element rendered\r\n    // $chart->renderContainer('span');\r\n    $chart->render();\r\n    \r\n    // and for the line\r\n    $lineChart->renderContainer();\r\n    $lineChart->render();\r\n?>\r\n```\r\n\r\n##Unit Tests\r\n\r\nYou can run the Unit Test suite with;\r\n\r\n    phpunit -c tests/ .","tagline":"PHP interface for the Highcharts JavaScript charting library","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}